{{define "BUILDS"}}
<br>
<div class="container">
  <div class="row">
    {{template "BUILDSDETAILS" .}}
  </div>
</div>
<script>
  function removeBtnOc(btn) {
    btn.classList.add('loading')
    btn.innerHTML = "";

    var callback = function(req) {
      if(req.status == 200){
        btn.innerHTML = "Add Back";
      }
      else {
        alert('Could not remove')
      }
      btn.classList.remove('loading')
    }

    makeRequest("/remove?id=" + btn.dataset.id + '&fullname=' + btn.dataset.fn, "POST", callback);
  }

  function buildBtnOc(btn) {
    /* on click handler for repos not added */
    history.pushState({id: btn.dataset.id, fullname: btn.dataset.fn}, "", window.location.origin + "/builds/"+btn.dataset.fn);

    return _updateMainBuild(btn.dataset.id)
  }

  function _updateMainBuild(id){
    document.getElementById("build").classList.add('loading');
    document.getElementById("build-details-container").classList.add('loading');
    document.querySelector("#build code").style.visibility = "hidden";
    document.querySelector("#build-details").style.visibility = "hidden";

    var callback = function(req) {
      if(req.status == 200){
        var tempel = document.createElement("div");
        tempel.innerHTML = req.response;
        var bd = document.getElementById("build-details");
        bd.innerHTML = tempel.querySelector("#build-details").innerHTML;

        var b = document.getElementById("build");
        console.log(tempel.querySelector("#build").innerHTML);
        b.innerHTML = tempel.querySelector("#build").innerHTML;
      }
      else {
        alert('Could not get info');
      }
      document.querySelector("#build code").style.visibility = "visible";
      document.querySelector("#filters #build-details").style.visibility = "visible";
      document.getElementById("build").classList.remove('loading');
      document.getElementById("filters").classList.remove('loading');

    }

    makeRequest("/build-info?id=" + id, "POST", callback);
    return false;
  }

  window.onpopstate = function(event) {
    _updateMainBuild(event.state.id)
  };

  function makeRequest(url, method, callback) {
    var req = new XMLHttpRequest();

    req.onreadystatechange = function() {
      if (req.readyState == XMLHttpRequest.DONE ) {
        callback(req);
      }
    }

    req.open(method, url);
    req.send();
  }

  {{if eq .areMore true}}

  /* more repos are left to be checked */
  var mainRepo = {{if .mainRepo.ID}}0{{else}}{{.fullname}}{{end}}
  getBuilds(2);

  function getBuilds(page){
    makeRequest("/only-builds?page=" + page + "&main=" + mainRepo, "GET", function(req){
      var nextPage = req.getResponseHeader("HG-PG-Next-Page");
      var htmldata = req.response;

      var tempel = document.createElement("div");
      tempel.innerHTML = htmldata;
      console.log(htmldata);

      if(tempel.querySelector("#build-details")){
        var bd = document.getElementById("build-details");
        bd.innerHTML = tempel.querySelector("#build-details").innerHTML;
        var ob = document.getElementById("other-builds");
        tempob = tempel.querySelector("#other-builds").innerHTML;
        while(tempob.firstChild) {
          ob.appendChild(tempob.firstChild);
        }
        var b = document.getElementById("build");
        b.innerHTML = tempel.querySelector("#build").innerHTML;
      } else {
        var element = document.getElementById("other-builds");
        while(tempel.firstChild) {
          element.appendChild(tempel.firstChild);
        }
      }

      if(nextPage !== "0"){
        getBuilds(nextPage);
      }
    })
  }
  {{end}}
</script>
{{end}}